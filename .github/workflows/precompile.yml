name: precompile

env:
  LIBXML2_VERSION="2.11.5"
  OPENSSL_VERSION="3.1.3"
  LIBSSH2_VERSION="1.11.0"
  LIBCARES2_VERSION="1.20.1"
  SQLITE3_VERSION="3430200"

on:
  push:
    tags:

jobs:
  linux:
    strategy:
      matrix:
        arch: [x86_64, aarch64]

    steps:
      - uses: actions/checkout@v4
      - name: Create src directory
        run: |
          mkdir -p "src"

      - name: Cache libxml2
        uses: actions/cache@v3
        id: cache-libxml2
        with:
          path: |
            ~/tarballs/libxml2-${{ env.LIBXML2_VERSION }}.tar.gz
          key: tarballs-libxml2-${{ env.LIBXML2_VERSION }}
      - name: Get libxml2
        if: steps.cache-libxml2.outputs.cache-hit != 'true'
        run: |
          curl -fSL "https://github.com/GNOME/libxml2/archive/refs/tags/v${LIBXML2_VERSION}.tar.gz" -o "tarballs/libxml2-v${LIBXML2_VERSION}.tar.gz"

      - name: Cache libc-ares2
        uses: actions/cache@v3
        id: cache-libc-ares2
        with:
          path: |
            ~/tarballs/c-ares-${{ env.LIBCARES2_VERSION }}.tar.gz
          key: tarballs-libc-ares-${{ env.LIBCARES2_VERSION }}
      - name: Get libc-ares2
        if: steps.cache-libc-ares2.outputs.cache-hit != 'true'
        run: |
          curl -fSL "https://github.com/c-ares/c-ares/releases/download/cares-${LIBCARES2_VERSION_UNDERSCORE}/c-ares-${LIBCARES2_VERSION}.tar.gz" -o "tarballs/libc-ares-${LIBCARES2_VERSION}.tar.gz"
      
      - name: Cache OpenSSL
        uses: actions/cache@v3
        id: cache-openssl
        with:
          path: |
            ~/tarballs/openssl-${{ env.OPENSSL_VERSION }}.tar.gz
          key: tarballs-openssl-${{ env.OPENSSL_VERSION }}
      - name: Get OpenSSL
        if: steps.cache-openssl.outputs.cache-hit != 'true'
        run: |
          curl -fSL "https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz" -o "tarballs/openssl-${OPENSSL_VERSION}.tar.gz"
      
      - name: Cache libssh2
        uses: actions/cache@v3
        id: cache-libssh2
        with:
          path: |
            ~/tarballs/libssh2-${{ env.LIBSSH2_VERSION }}.tar.gz
          key: tarballs-libssh2-${{ env.LIBSSH2_VERSION }}
      - name: Get libssh2
        if: steps.cache-libssh2.outputs.cache-hit != 'true'
        run: |
          curl -fSL "https://libssh2.org/download/libssh2-${LIBSSH2_VERSION}.tar.gz" -o "tarballs/libssh2-${LIBSSH2_VERSION}.tar.gz"
      
      - name: Cache SQLite3
        uses: actions/cache@v3
        id: cache-sqlite3
        with:
          path: |
            ~/tarballs/sqlite-autoconf-${{ env.SQLITE3_VERSION }}.tar.gz
          key: tarballs-sqlite3-${{ env.SQLITE3_VERSION }}
      - name: Get SQLite3
        if: steps.cache-sqlite3.outputs.cache-hit != 'true'
        run: |
          curl -fSL "https://www.sqlite.org/2023/sqlite-autoconf-${SQLITE3_VERSION}.tar.gz" -o "tarballs/sqlite-autoconf-${SQLITE3_VERSION}.tar.gz"
      
      - name: Cache compiled libxml2
        uses: actions/cache@v3
        id: cache-libxml2-compiled-linux-${{ matrix.arch }}-gnu
        with:
          path: |
            ~/deps/libxml2-${{ env.LIBXML2_VERSION }}-linux-${{ matrix.arch }}-gnu.tar.gz
          key: deps-libxml2-${{ env.LIBXML2_VERSION }}-linux-${{ matrix.arch }}-gnu
      - name: Compile libxml2
        if: steps.cache-libxml2-compiled-linux-${{ matrix.arch }}-gnu.outputs.cache-hit != 'true'
        run: |
          export ROOT_DIR=$(pwd)
          tar -xzf "tarballs/libxml2-v${LIBXML2_VERSION}.tar.gz" -C src
          cd "src/libxml2-${LIBXML2_VERSION}"
          cmake -S . -B libxml2-build \
              -D BUILD_SHARED_LIBS=OFF \
              -D CMAKE_BUILD_TYPE=Release \
              -D CMAKE_INSTALL_PREFIX=/usr/local \
              -D LIBXML2_WITH_ICONV=OFF \
              -D LIBXML2_WITH_LZMA=OFF \
              -D LIBXML2_WITH_PYTHON=OFF \
              -D LIBXML2_WITH_ZLIB=OFF
          cd libxml2-build && \
              make -j${NPROC} && \
              make DESTDIR="${ROOT_DIR}/deps/libxml2" install
          cd "${ROOT_DIR}/deps"
          tar -czf "libxml2-${LIBXML2_VERSION}-linux-${{ matrix.arch }}-gnu.tar.gz" -C libxml2

      - uses: softprops/action-gh-release@v1
        with:
          files: deps/*.tar.gz
